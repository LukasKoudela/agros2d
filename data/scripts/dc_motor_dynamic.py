import numpy as np
import pylab as pl
from scipy.integrate import odeint
from scipy.interpolate import interp1d

phi = [0.0, 4.0, 8.0, 12.0, 16.0, 20.0, 24.0, 28.0, 32.0, 36.0, 40.0, 44.0, 48.0, 52.0, 56.0, 60.0, 64.0, 68.0, 72.0, 76.0, 80.0, 84.0, 88.0, 92.0, 96.0, 100.0, 104.0, 108.0, 112.0, 116.0, 120.0, 124.0, 128.0, 132.0, 136.0, 140.0, 144.0, 148.0, 152.0, 156.0, 160.0, 164.0, 168.0, 172.0, 176.0, 180.0]
T_magnetic_torque = [-4.2099750000000006e-07, -0.0006306440000000001, -0.0012431405000000002, -0.0027673415, -0.0037627800000000007, -0.004668125, -0.005372255, -0.005509490000000001, -0.006019965000000001, -0.006202910000000001, -0.007951475000000001, -0.009308495000000002, -0.00903189, -0.009031260000000001, -0.011202345, -0.01173942, -0.013634670000000002, -0.013729415, -0.013753075000000002, -0.014419475000000001, -0.0097538, -0.008428175000000001, -0.0028582085000000003, 0.001922431, 0.00836486, 0.010786545, 0.013908825000000001, 0.013557495000000001, 0.013209665, 0.013566455000000002, 0.011872665000000001, 0.011166470000000001, 0.009009595, 0.009028250000000002, 0.009307900000000001, 0.007950670000000002, 0.006194965, 0.0060320750000000005, 0.00558495, 0.0053764550000000005, 0.0046711700000000005, 0.003763025, 0.0026294870000000007, 0.001254253, 0.000597345, -4.944730000000001e-07]
T_torque = [7.600635000000001e-08, -0.00017802715, -0.00043366050000000005, -0.0013786395, -0.002051854, -0.0025863285000000003, -0.0029615285000000003, -0.0029484280000000003, -0.008016085000000001, -0.008393595, -0.01086897, -0.012900475000000002, -0.012870795, -0.01335537, -0.016747500000000002, -0.018461975000000002, -0.022139145000000002, -0.024000515000000004, -0.025957925, -0.030677990000000002, -0.029933050000000006, -0.037302300000000004, -0.03650815, -0.0453334, -0.02398515, -0.012230330000000003, -0.005922595000000001, -0.0013065115, 0.0007364700000000001, 0.0028762475000000003, 0.0035826000000000005, 0.0041284600000000005, 0.0029878625, 0.0038398150000000003, 0.004532675000000001, 0.0039266150000000005, 0.00301847, 0.0031519530000000003, 0.0030171505000000003, 0.0029608460000000005, 0.0025858875000000004, 0.002052134, 0.001297366, 0.0004423615, 0.00016526405, 1.6689750000000002e-08]

# static characteristic
pl.close()
pl.figure(figsize = [8, 5])
pl.plot(phi, T_magnetic_torque, 'b', label="$\mathrm{0.0~A$")
pl.plot(phi, T_torque, 'r', label="$\mathrm{0.8~A$")
pl.plot([0, 180], [0, 0], '--k')
pl.xlabel("$\\phi~\mathrm{(deg.)}$")
pl.ylabel("$T~\mathrm{(Nm)}$")
pl.legend(loc="lower right")
fn_chart_static = pythonlab.tempname("png")
pl.savefig(fn_chart_static, dpi=60)
pl.close()

# show in console
pythonlab.image(fn_chart_static)

J = 7.5e-5;
k = 2e-4
T_f = interp1d(phi, T_torque, kind = "linear")

def func(x, t):      
   dx = [0., 0.]
   dx[0] = x[1] 
   dx[1] = (- T_f((x[0]*180/np.pi) % 180) - k*x[1]) * 1/J       
   return dx
   
x0 = [np.pi/6, 0]
time = np.linspace(0, 2, 1000)
y = odeint(func, x0, time) 

# dynamic characteristic
pl.close()
pl.figure(figsize = [8, 5])
pl.subplot(2,1,1)
pl.plot(time, y[:,0]/np.pi*180 % 180, 'r-')
# pl.xlabel("$t~\mathrm{(s)}$")
pl.ylabel("$\\phi~\mathrm{(deg.)}$")
pl.xlim(0, 1.41)
pl.subplot(2,1,2)
pl.plot(time, y[:,1]/2/np.pi*60, 'r-')
pl.xlabel("$t~\mathrm{(s)}$")
pl.ylabel("$n~\mathrm{(rev./min.)}$")
pl.xlim(0, 1.41)
fn_chart_dynamic = pythonlab.tempname("png")
pl.savefig(fn_chart_dynamic, dpi=60)
pl.close()

# show in console
pythonlab.image(fn_chart_dynamic)